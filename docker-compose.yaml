services:

  postgres:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 3

  minio:
    image: minio/minio:latest
    container_name: minio-server
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${STORAGE_USER}
      MINIO_ROOT_PASSWORD: ${STORAGE_PASSWORD}
    env_file:
      - .env
    volumes:
      - minio-storage:/data
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 3

  minio-init:
    image: minio/mc:latest
    container_name: minio-client
    env_file:
      - .env
    depends_on:
      minio:
        condition: service_healthy
    network_mode: service:minio
    entrypoint: >
      /bin/sh -c "
      echo URL: http://minio:9000;
      echo Credentials: ${STORAGE_USER}:${STORAGE_PASSWORD};
      /usr/bin/mc alias set minio http://minio:9000 ${STORAGE_USER} ${STORAGE_PASSWORD};
      /usr/bin/mc mb minio/${STORAGE_BUCKET} --ignore-existing;
      /usr/bin/mc anonymous set public minio/${STORAGE_BUCKET};
      /usr/bin/mc admin user add minio ${STORAGE_STREAMLIT_USER} ${STORAGE_STREAMLIT_PASSWORD};
      /usr/bin/mc admin policy attach minio readonly readwrite --user ${STORAGE_STREAMLIT_USER}
      "

  streamlit:
    build:
      context: ./streamlit
      dockerfile: Dockerfile
      args:
        - DB_NAME=${DB_NAME}
        - DB_USER=${DB_STREAMLIT_USER}
        - DB_PASSWORD=${DB_STREAMLIT_PASSWORD}
    container_name: streamlit-web
    ports:
      - "8501:8501"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_STREAMLIT_USER}
      - DB_PASSWORD=${DB_STREAMLIT_PASSWORD}
    env_file:
      - .env
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      minio-init:
        condition: service_completed_successfully

volumes:
  pgdata:
  minio-storage:

networks:
  app-network:
    driver: bridge
